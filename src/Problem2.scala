package euler

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
 * the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <p>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms.
 *
 * @see <a href="http://projecteuler.net/index.php?section=problems&id=2">Problem 2</a>
 */
object Problem2 extends Problem[Int] {
  def solve = {
    def fibsum(i: Int, j: Int, inc: Int => Int): Int = if (j > 4000000) 0 else inc(j) + fibsum(j, j + i, inc)
    fibsum(1, 2, {j => if (j % 2 == 0) j else 0 })
  }
}